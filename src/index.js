/**
 * Wheel Fitment API
 * The Wheel Fitment API allows for programmatic access to the database of www.wheel-size.com and its services. Use this API to retrieve information about vehicle fitment database for rims and tires, including OE and option fitments, and plus/minus sizing fitment information. A variety of country and language specific options are available. The coverage of fitment data for vehicles manufactured since 2000 is nearly 100%.  The information about fitment data is updated on a daily basis.
 *
 * OpenAPI spec version: v1
 * Contact: info@wheel-size.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Aggregation', 'model/Body', 'model/BoltPattern', 'model/Country', 'model/Generation', 'model/GenerationWithMakeAndModel', 'model/Make', 'model/MakeWithModels', 'model/Market', 'model/Model', 'model/ModelWithTires', 'model/ModelWithTrims', 'model/Power', 'model/Pressure', 'model/RimAgregation', 'model/SizeAggregation', 'model/Tire', 'model/TiresAggregation', 'model/Trim', 'model/TrimWithMarketAndYears', 'model/Vehicle', 'model/Wheel', 'model/WheelPair', 'model/Year', 'api/BoltPatternsApi', 'api/CountriesApi', 'api/GenerationsApi', 'api/MakesApi', 'api/MarketsApi', 'api/ModelsApi', 'api/SearchApi', 'api/TiresApi', 'api/TrimsApi', 'api/VehiclesApi', 'api/YearsApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/Aggregation'), require('./model/Body'), require('./model/BoltPattern'), require('./model/Country'), require('./model/Generation'), require('./model/GenerationWithMakeAndModel'), require('./model/Make'), require('./model/MakeWithModels'), require('./model/Market'), require('./model/Model'), require('./model/ModelWithTires'), require('./model/ModelWithTrims'), require('./model/Power'), require('./model/Pressure'), require('./model/RimAgregation'), require('./model/SizeAggregation'), require('./model/Tire'), require('./model/TiresAggregation'), require('./model/Trim'), require('./model/TrimWithMarketAndYears'), require('./model/Vehicle'), require('./model/Wheel'), require('./model/WheelPair'), require('./model/Year'), require('./api/BoltPatternsApi'), require('./api/CountriesApi'), require('./api/GenerationsApi'), require('./api/MakesApi'), require('./api/MarketsApi'), require('./api/ModelsApi'), require('./api/SearchApi'), require('./api/TiresApi'), require('./api/TrimsApi'), require('./api/VehiclesApi'), require('./api/YearsApi'));
  }
}(function(ApiClient, Aggregation, Body, BoltPattern, Country, Generation, GenerationWithMakeAndModel, Make, MakeWithModels, Market, Model, ModelWithTires, ModelWithTrims, Power, Pressure, RimAgregation, SizeAggregation, Tire, TiresAggregation, Trim, TrimWithMarketAndYears, Vehicle, Wheel, WheelPair, Year, BoltPatternsApi, CountriesApi, GenerationsApi, MakesApi, MarketsApi, ModelsApi, SearchApi, TiresApi, TrimsApi, VehiclesApi, YearsApi) {
  'use strict';

  /**
   * The_Wheel_Fitment_API_allows_for_programmatic_access_to_the_database_of_www_wheel_size_com_and_its_services_Use_this_API_to_retrieve_information_about_vehicle_fitment_database_for_rims_and_tires_including_OE_and_option_fitments_and_plusminus_sizing_fitment_information__A_variety_of_country_and_language_specific_options_are_available__The_coverage_of_fitment_data_for_vehicles_manufactured_since_2000_is_nearly_100_The_information_about_fitment_data_is_updated_on_a_daily_basis_.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var ws_api_client = require('index'); // See note below*.
   * var xxxSvc = new ws_api_client.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new ws_api_client.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new ws_api_client.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new ws_api_client.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.0.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The Aggregation model constructor.
     * @property {module:model/Aggregation}
     */
    Aggregation: Aggregation,
    /**
     * The Body model constructor.
     * @property {module:model/Body}
     */
    Body: Body,
    /**
     * The BoltPattern model constructor.
     * @property {module:model/BoltPattern}
     */
    BoltPattern: BoltPattern,
    /**
     * The Country model constructor.
     * @property {module:model/Country}
     */
    Country: Country,
    /**
     * The Generation model constructor.
     * @property {module:model/Generation}
     */
    Generation: Generation,
    /**
     * The GenerationWithMakeAndModel model constructor.
     * @property {module:model/GenerationWithMakeAndModel}
     */
    GenerationWithMakeAndModel: GenerationWithMakeAndModel,
    /**
     * The Make model constructor.
     * @property {module:model/Make}
     */
    Make: Make,
    /**
     * The MakeWithModels model constructor.
     * @property {module:model/MakeWithModels}
     */
    MakeWithModels: MakeWithModels,
    /**
     * The Market model constructor.
     * @property {module:model/Market}
     */
    Market: Market,
    /**
     * The Model model constructor.
     * @property {module:model/Model}
     */
    Model: Model,
    /**
     * The ModelWithTires model constructor.
     * @property {module:model/ModelWithTires}
     */
    ModelWithTires: ModelWithTires,
    /**
     * The ModelWithTrims model constructor.
     * @property {module:model/ModelWithTrims}
     */
    ModelWithTrims: ModelWithTrims,
    /**
     * The Power model constructor.
     * @property {module:model/Power}
     */
    Power: Power,
    /**
     * The Pressure model constructor.
     * @property {module:model/Pressure}
     */
    Pressure: Pressure,
    /**
     * The RimAgregation model constructor.
     * @property {module:model/RimAgregation}
     */
    RimAgregation: RimAgregation,
    /**
     * The SizeAggregation model constructor.
     * @property {module:model/SizeAggregation}
     */
    SizeAggregation: SizeAggregation,
    /**
     * The Tire model constructor.
     * @property {module:model/Tire}
     */
    Tire: Tire,
    /**
     * The TiresAggregation model constructor.
     * @property {module:model/TiresAggregation}
     */
    TiresAggregation: TiresAggregation,
    /**
     * The Trim model constructor.
     * @property {module:model/Trim}
     */
    Trim: Trim,
    /**
     * The TrimWithMarketAndYears model constructor.
     * @property {module:model/TrimWithMarketAndYears}
     */
    TrimWithMarketAndYears: TrimWithMarketAndYears,
    /**
     * The Vehicle model constructor.
     * @property {module:model/Vehicle}
     */
    Vehicle: Vehicle,
    /**
     * The Wheel model constructor.
     * @property {module:model/Wheel}
     */
    Wheel: Wheel,
    /**
     * The WheelPair model constructor.
     * @property {module:model/WheelPair}
     */
    WheelPair: WheelPair,
    /**
     * The Year model constructor.
     * @property {module:model/Year}
     */
    Year: Year,
    /**
     * The BoltPatternsApi service constructor.
     * @property {module:api/BoltPatternsApi}
     */
    BoltPatternsApi: BoltPatternsApi,
    /**
     * The CountriesApi service constructor.
     * @property {module:api/CountriesApi}
     */
    CountriesApi: CountriesApi,
    /**
     * The GenerationsApi service constructor.
     * @property {module:api/GenerationsApi}
     */
    GenerationsApi: GenerationsApi,
    /**
     * The MakesApi service constructor.
     * @property {module:api/MakesApi}
     */
    MakesApi: MakesApi,
    /**
     * The MarketsApi service constructor.
     * @property {module:api/MarketsApi}
     */
    MarketsApi: MarketsApi,
    /**
     * The ModelsApi service constructor.
     * @property {module:api/ModelsApi}
     */
    ModelsApi: ModelsApi,
    /**
     * The SearchApi service constructor.
     * @property {module:api/SearchApi}
     */
    SearchApi: SearchApi,
    /**
     * The TiresApi service constructor.
     * @property {module:api/TiresApi}
     */
    TiresApi: TiresApi,
    /**
     * The TrimsApi service constructor.
     * @property {module:api/TrimsApi}
     */
    TrimsApi: TrimsApi,
    /**
     * The VehiclesApi service constructor.
     * @property {module:api/VehiclesApi}
     */
    VehiclesApi: VehiclesApi,
    /**
     * The YearsApi service constructor.
     * @property {module:api/YearsApi}
     */
    YearsApi: YearsApi
  };

  return exports;
}));
